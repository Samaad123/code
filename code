import adsk.core, adsk.fusion, traceback

def run(context):
    ui = None
    try:
        # Set up Fusion
        app = adsk.core.Application.get()
        ui = app.userInterface
        design = app.activeProduct
        rootComp = design.rootComponent

        # === PAN BODY ===
        sketches = rootComp.sketches
        xzPlane = rootComp.xZConstructionPlane
        sketch = sketches.add(xzPlane)

        # Define sketch points (half profile)
        points = [
            adsk.core.Point3D.create(0, 0, 0),       # center bottom
            adsk.core.Point3D.create(130, 0, 0),     # flat bottom out
            adsk.core.Point3D.create(130, 40, 0),    # vertical wall
            adsk.core.Point3D.create(120, 45, 0),    # angled lip
            adsk.core.Point3D.create(0, 45, 0)       # top inner wall
        ]

        # Draw lines for pan profile
        lines = sketch.sketchCurves.sketchLines
        for i in range(len(points) - 1):
            lines.addByTwoPoints(points[i], points[i + 1])

        # Close profile to center axis
        lines.addByTwoPoints(points[-1], points[0])

        # Construction axis
        axis = lines.addByTwoPoints(adsk.core.Point3D.create(0, -20, 0), adsk.core.Point3D.create(0, 80, 0))
        axis.isConstruction = True

        # Revolve to make pan
        profile = sketch.profiles.item(0)
        revolves = rootComp.features.revolveFeatures
        revInput = revolves.createInput(profile, axis, adsk.fusion.FeatureOperations.NewBodyFeatureOperation)
        angle = adsk.core.ValueInput.createByString('360 deg')
        revInput.setAngleExtent(False, angle)
        body = revolves.add(revInput).bodies.item(0)
        body.name = "Pan Body"

        # Shell it to hollow inside
        shellFeats = rootComp.features.shellFeatures
        shellInput = shellFeats.createInput([body], True)
        shellInput.insideThickness = adsk.core.ValueInput.createByString('2.5 mm')
        shellFeats.add(shellInput)

        # === HANDLE ===
        handleSketch = sketches.add(xzPlane)

        # Simple rectangular handle at side of pan
        h1 = adsk.core.Point3D.create(130, 30, 0)
        h2 = adsk.core.Point3D.create(230, 30, 0)
        h3 = adsk.core.Point3D.create(230, 40, 0)
        h4 = adsk.core.Point3D.create(130, 40, 0)

        handleLines = handleSketch.sketchCurves.sketchLines
        handleLines.addByTwoPoints(h1, h2)
        handleLines.addByTwoPoints(h2, h3)
        handleLines.addByTwoPoints(h3, h4)
        handleLines.addByTwoPoints(h4, h1)

        # Extrude handle into a 3D body
        handleProfile = handleSketch.profiles.item(0)
        extrudes = rootComp.features.extrudeFeatures
        handleInput = extrudes.createInput(handleProfile, adsk.fusion.FeatureOperations.NewBodyFeatureOperation)
        handleInput.setDistanceExtent(False, adsk.core.ValueInput.createByString('15 mm'))
        handleBody = extrudes.add(handleInput).bodies.item(0)
        handleBody.name = "Handle"

        ui.messageBox("âœ… Frying pan created successfully!")

    except:
        if ui:
            ui.messageBox('Failed:\n{}'.format(traceback.format_exc()))
