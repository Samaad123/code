# Fusion 360 Python API Script: Eco-Friendly Frying Pan
# Run via Scripts and Add-Ins in Fusion 360

import adsk.core, adsk.fusion, adsk.cam, traceback

def run(context):
    ui = None
    try:
        app = adsk.core.Application.get()
        ui  = app.userInterface
        design = app.activeProduct
        
        # Create new component
        root = design.rootComponent
        allOcc = root.occurrences
        trans = adsk.core.Matrix3D.create()
        panOcc = allOcc.addNewComponent(trans)
        panComp = panOcc.component
        panComp.name = 'EcoFryPan'

        # Sketch pan profile
        sketches = panComp.sketches
        xyPlane = panComp.xYConstructionPlane
        sketch = sketches.add(xyPlane)
        sketch.name = 'Pan Profile'

        lines = sketch.sketchCurves.sketchLines
        arcs = sketch.sketchCurves.sketchArcs

        # Draw half cross-section: bowl shape with arc
        p1 = adsk.core.Point3D.create(0, 0, 0)
        p2 = adsk.core.Point3D.create(0, 50, 0)
        p3 = adsk.core.Point3D.create(30, 50, 0)
        p4 = adsk.core.Point3D.create(30, 0, 0)
        
        lines.addByTwoPoints(p1, p2)
        arcs.addByThreePoints(p2, adsk.core.Point3D.create(15, 55, 0), p3)
        lines.addByTwoPoints(p3, p4)
        lines.addByTwoPoints(p4, p1)

        # Revolve to make body
        prof = sketch.profiles.item(0)
        revolves = panComp.features.revolveFeatures
        revInput = revolves.createInput(prof, sketch.sketchLines.item(0), adsk.fusion.FeatureOperations.NewBodyFeatureOperation)
        angle = adsk.core.ValueInput.createByString('360 deg')
        revInput.setAngleExtent(False, angle)
        rev = revolves.add(revInput)
        panBody = rev.bodies.item(0)
        panBody.name = 'PanBody'

        # Shell the pan (2.5 mm)
        shellFeats = panComp.features.shellFeatures
        shellInput = shellFeats.createInput([panBody.faces.item(0)], True)
        thickness = adsk.core.ValueInput.createByString('2.5 mm')
        shellInput.insideThickness = thickness
        shellFeats.add(shellInput)

        # Handle Mount
        handleSketch = sketches.add(xyPlane)
        handleSketch.name = 'Handle Mount Base'
        handleRect = handleSketch.sketchCurves.sketchLines
        handleRect.addCenterPointRectangle(adsk.core.Point3D.create(35, 25, 0), adsk.core.Point3D.create(40, 30, 0))

        prof = handleSketch.profiles.item(0)
        extrudes = panComp.features.extrudeFeatures
        extrudeInput = extrudes.createInput(prof, adsk.fusion.FeatureOperations.NewBodyFeatureOperation)
        dist = adsk.core.ValueInput.createByString('10 mm')
        extrudeInput.setDistanceExtent(False, dist)
        extrudes.add(extrudeInput)

        # Ergonomic Handle (Conceptual sweep path + profile)
        # This is a guide. You must manually adjust for ergonomic fit
        handlePathSketch = sketches.add(xyPlane)
        handlePathSketch.name = 'Handle Path'
        spline = handlePathSketch.sketchCurves.sketchFittedSplines
        points = adsk.core.ObjectCollection.create()
        points.add(adsk.core.Point3D.create(40, 27.5, 0))
        points.add(adsk.core.Point3D.create(60, 35, 10))
        points.add(adsk.core.Point3D.create(80, 30, 20))
        spline.add(points)

        # Sketch handle profile perpendicular to start of spline
        yzPlane = panComp.yZConstructionPlane
        handleProfSketch = sketches.add(yzPlane)
        handleProfSketch.name = 'Handle Profile'
        handleProfSketch.sketchCurves.sketchCircles.addByCenterRadius(adsk.core.Point3D.create(40, 27.5, 0), 4)

        # You will need to manually connect this profile to path (due to sketch references)
        # Go to model UI: Create > Sweep > Select Profile + Path

        # Apply materials manually if needed
        # app.materialLibraries.itemByName('Fusion 360 Material Library').materials.itemByName('Wood â€“ Bamboo')

        ui.messageBox('Eco Frying Pan base and handle path created. Use Sweep to finalize ergonomic handle.')

    except:
        if ui:
            ui.messageBox('Failed:\\n{}'.format(traceback.format_exc()))
