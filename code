import adsk.core, adsk.fusion, traceback

def run(context):
    ui = None
    try:
        app = adsk.core.Application.get()
        ui  = app.userInterface
        design = app.activeProduct
        rootComp = design.rootComponent

        # === Create the PAN BODY ===
        sketches = rootComp.sketches
        xzPlane = rootComp.xZConstructionPlane
        panSketch = sketches.add(xzPlane)

        lines = panSketch.sketchCurves.sketchLines
        arcs = panSketch.sketchCurves.sketchArcs

        # Define points (bowl shape, 270mm diameter, 40mm tall)
        p1 = adsk.core.Point3D.create(0, 0, 0)           # center bottom
        p2 = adsk.core.Point3D.create(135, 0, 0)         # outer bottom edge
        p3 = adsk.core.Point3D.create(135, 40, 0)        # top outer edge
        arcMid = adsk.core.Point3D.create(60, 50, 0)     # mid arc (for curvature)
        p4 = adsk.core.Point3D.create(5, 5, 0)           # near bottom

        # Create profile
        lines.addByTwoPoints(p1, p2)
        lines.addByTwoPoints(p2, p3)
        arcs.addByThreePoints(p3, arcMid, p4)
        lines.addByTwoPoints(p4, p1)

        # Center axis (construction)
        axisLine = lines.addByTwoPoints(adsk.core.Point3D.create(0, -10, 0), adsk.core.Point3D.create(0, 100, 0))
        axisLine.isConstruction = True

        # Revolve
        profile = panSketch.profiles.item(0)
        revolves = rootComp.features.revolveFeatures
        revInput = revolves.createInput(profile, axisLine, adsk.fusion.FeatureOperations.NewBodyFeatureOperation)
        angle = adsk.core.ValueInput.createByString('360 deg')
        revInput.setAngleExtent(False, angle)
        panBody = revolves.add(revInput)
        panBody.bodies.item(0).name = "Pan Body"

        # === HANDLE ===
        handleSketch = sketches.add(xzPlane)

        # Place handle at top edge
        startX = 135
        startY = 35
        thickness = 10
        length = 100

        p1 = adsk.core.Point3D.create(startX, startY, 0)
        p2 = adsk.core.Point3D.create(startX + length, startY, 0)
        p3 = adsk.core.Point3D.create(startX + length, startY + thickness, 0)
        p4 = adsk.core.Point3D.create(startX, startY + thickness, 0)

        h_lines = handleSketch.sketchCurves.sketchLines
        h_lines.addByTwoPoints(p1, p2)
        h_lines.addByTwoPoints(p2, p3)
        h_lines.addByTwoPoints(p3, p4)
        h_lines.addByTwoPoints(p4, p1)

        # Extrude handle
        extrudes = rootComp.features.extrudeFeatures
        handleProfile = handleSketch.profiles.item(0)
        extInput = extrudes.createInput(handleProfile, adsk.fusion.FeatureOperations.NewBodyFeatureOperation)
        extInput.setDistanceExtent(False, adsk.core.ValueInput.createByString('15 mm'))
        handleBody = extrudes.add(extInput)
        handleBody.bodies.item(0).name = "Wooden Handle"

        ui.messageBox("âœ… Fixed pan created!")

    except:
        if ui:
            ui.messageBox('Failed:\n{}'.format(traceback.format_exc()))
