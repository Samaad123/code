# Revised Fusion 360 script: creates pan + ergonomic handle via sweep
# Entirely automated – user just runs the script

fusion_script_fixed = '''\
import adsk.core, adsk.fusion, traceback

def run(context):
    ui = None
    try:
        # Setup
        app = adsk.core.Application.get()
        ui  = app.userInterface
        design = app.activeProduct
        rootComp = design.rootComponent
        sketches = rootComp.sketches
        xzPlane = rootComp.xZConstructionPlane

        # === PAN BODY ===
        panSketch = sketches.add(xzPlane)
        panSketch.name = 'Pan Profile'
        points = [
            adsk.core.Point3D.create(0, 0, 0),
            adsk.core.Point3D.create(130, 0, 0),
            adsk.core.Point3D.create(130, 40, 0),
            adsk.core.Point3D.create(120, 45, 0),
            adsk.core.Point3D.create(0, 45, 0)
        ]
        lines = panSketch.sketchCurves.sketchLines
        for i in range(len(points) - 1):
            lines.addByTwoPoints(points[i], points[i + 1])
        lines.addByTwoPoints(points[-1], points[0])
        axis = lines.addByTwoPoints(adsk.core.Point3D.create(0, -20, 0), adsk.core.Point3D.create(0, 80, 0))
        axis.isConstruction = True
        profile = panSketch.profiles.item(0)
        revolves = rootComp.features.revolveFeatures
        revInput = revolves.createInput(profile, axis, adsk.fusion.FeatureOperations.NewBodyFeatureOperation)
        revInput.setAngleExtent(False, adsk.core.ValueInput.createByString('360 deg'))
        panBody = revolves.add(revInput).bodies.item(0)
        panBody.name = "Pan Body"
        shellFeats = rootComp.features.shellFeatures
        shellInput = shellFeats.createInput([panBody], True)
        shellInput.insideThickness = adsk.core.ValueInput.createByString('2.5 mm')
        shellFeats.add(shellInput)

        # === HANDLE MOUNT TAB ===
        tabSketch = sketches.add(xzPlane)
        tabSketch.name = 'Handle Mount'
        tabLines = tabSketch.sketchCurves.sketchLines
        t1 = adsk.core.Point3D.create(130, 30, 0)
        t2 = adsk.core.Point3D.create(140, 30, 0)
        t3 = adsk.core.Point3D.create(140, 40, 0)
        t4 = adsk.core.Point3D.create(130, 40, 0)
        tabLines.addByTwoPoints(t1, t2)
        tabLines.addByTwoPoints(t2, t3)
        tabLines.addByTwoPoints(t3, t4)
        tabLines.addByTwoPoints(t4, t1)
        tabProfile = tabSketch.profiles.item(0)
        extrudes = rootComp.features.extrudeFeatures
        tabInput = extrudes.createInput(tabProfile, adsk.fusion.FeatureOperations.NewBodyFeatureOperation)
        tabInput.setDistanceExtent(False, adsk.core.ValueInput.createByString('5 mm'))
        tabBody = extrudes.add(tabInput).bodies.item(0)
        tabBody.name = "Handle Mount Tab"

        # === ERGONOMIC HANDLE ===
        # Spline path
        pathSketch = sketches.add(xzPlane)
        pathSketch.name = 'Handle Path'
        splinePoints = adsk.core.ObjectCollection.create()
        splinePoints.add(adsk.core.Point3D.create(140, 35, 0))
        splinePoints.add(adsk.core.Point3D.create(170, 40, 5))
        splinePoints.add(adsk.core.Point3D.create(200, 35, 10))
        splinePoints.add(adsk.core.Point3D.create(230, 30, 15))
        spline = pathSketch.sketchCurves.sketchFittedSplines.add(splinePoints)

        # Circle profile at start
        yzPlane = rootComp.yZConstructionPlane
        profSketch = sketches.add(yzPlane)
        profSketch.name = 'Handle Profile'
        center = adsk.core.Point3D.create(140, 35, 0)
        circle = profSketch.sketchCurves.sketchCircles.addByCenterRadius(center, 5)

        # Sweep
        prof = profSketch.profiles.item(0)
        path = rootComp.features.createPath(spline)
        sweeps = rootComp.features.sweepFeatures
        sweepInput = sweeps.createInput(prof, path, adsk.fusion.FeatureOperations.NewBodyFeatureOperation)
        sweeps.add(sweepInput)

        ui.messageBox("✅ Eco-friendly frying pan with ergonomic handle created!")

    except:
        if ui:
            ui.messageBox('Failed:\\n{}'.format(traceback.format_exc()))
'''

# Save the script to a file for download
file_path = "/mnt/data/eco_fry_pan_complete.py"
with open(file_path, "w") as f:
    f.write(fusion_script_fixed)

file_path
